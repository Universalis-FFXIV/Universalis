/* 
 * Universalis
 *
 * Welcome to the Universalis documentation page.  <br />  <br />  There is a rate limit of 20 req/s (40 req/s burst) on the API, and 10 req/s (20 req/s burst) on the website itself, if you're scraping instead.  The number of simultaneous connections per IP is capped to 8.    To map item IDs to item names or vice versa, use <a href=\"https://xivapi.com/docs/Search#search\">XIVAPI</a>.  In addition to XIVAPI, you can also get item ID mappings from <a href=\"https://lumina.xiv.dev/docs/intro.html\">Lumina</a>,  <a href=\"https://raw.githubusercontent.com/xivapi/ffxiv-datamining/master/csv/Item.csv\">this sheet</a>, or  <a href=\"https://raw.githubusercontent.com/ffxiv-teamcraft/ffxiv-teamcraft/master/apps/client/src/assets/data/items.json\">this</a> pre-made dump.    To get a mapping of world IDs to world names, use <a href=\"https://xivapi.com/World\">XIVAPI</a> or  <a href=\"https://github.com/xivapi/ffxiv-datamining/blob/master/csv/World.csv\">this sheet</a>.  The <code>key</code> column represents the world ID, and the <code>Name</code> column represents the world name.  Note that not all listed worlds are available to be used &#8212; many of the worlds in this sheet are test worlds,  or Korean worlds (Korea is unsupported at this time).    <br />  <br />  If you use this API heavily for your projects, please consider supporting the website on  <a href=\"https://liberapay.com/karashiiro\">Liberapay</a>, <a href=\"https://ko-fi.com/karashiiro\">Ko-fi</a>, or  <a href=\"https://patreon.com/universalis\">Patreon</a>, or making a one-time donation on  <a href=\"https://ko-fi.com/karashiiro\">Ko-fi</a>. Any support is appreciated!  
 *
 * OpenAPI spec version: v2
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using IO.Swagger.Api;
using IO.Swagger.Model;
using IO.Swagger.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing CurrentlyShownView
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class CurrentlyShownViewTests
    {
        // TODO uncomment below to declare an instance variable for CurrentlyShownView
        //private CurrentlyShownView instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of CurrentlyShownView
            //instance = new CurrentlyShownView();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of CurrentlyShownView
        /// </summary>
        [Test]
        public void CurrentlyShownViewInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" CurrentlyShownView
            //Assert.IsInstanceOfType<CurrentlyShownView> (instance, "variable 'instance' is a CurrentlyShownView");
        }


        /// <summary>
        /// Test the property 'ItemID'
        /// </summary>
        [Test]
        public void ItemIDTest()
        {
            // TODO unit test for the property 'ItemID'
        }
        /// <summary>
        /// Test the property 'WorldID'
        /// </summary>
        [Test]
        public void WorldIDTest()
        {
            // TODO unit test for the property 'WorldID'
        }
        /// <summary>
        /// Test the property 'LastUploadTime'
        /// </summary>
        [Test]
        public void LastUploadTimeTest()
        {
            // TODO unit test for the property 'LastUploadTime'
        }
        /// <summary>
        /// Test the property 'Listings'
        /// </summary>
        [Test]
        public void ListingsTest()
        {
            // TODO unit test for the property 'Listings'
        }
        /// <summary>
        /// Test the property 'RecentHistory'
        /// </summary>
        [Test]
        public void RecentHistoryTest()
        {
            // TODO unit test for the property 'RecentHistory'
        }
        /// <summary>
        /// Test the property 'DcName'
        /// </summary>
        [Test]
        public void DcNameTest()
        {
            // TODO unit test for the property 'DcName'
        }
        /// <summary>
        /// Test the property 'CurrentAveragePrice'
        /// </summary>
        [Test]
        public void CurrentAveragePriceTest()
        {
            // TODO unit test for the property 'CurrentAveragePrice'
        }
        /// <summary>
        /// Test the property 'CurrentAveragePriceNQ'
        /// </summary>
        [Test]
        public void CurrentAveragePriceNQTest()
        {
            // TODO unit test for the property 'CurrentAveragePriceNQ'
        }
        /// <summary>
        /// Test the property 'CurrentAveragePriceHQ'
        /// </summary>
        [Test]
        public void CurrentAveragePriceHQTest()
        {
            // TODO unit test for the property 'CurrentAveragePriceHQ'
        }
        /// <summary>
        /// Test the property 'RegularSaleVelocity'
        /// </summary>
        [Test]
        public void RegularSaleVelocityTest()
        {
            // TODO unit test for the property 'RegularSaleVelocity'
        }
        /// <summary>
        /// Test the property 'NqSaleVelocity'
        /// </summary>
        [Test]
        public void NqSaleVelocityTest()
        {
            // TODO unit test for the property 'NqSaleVelocity'
        }
        /// <summary>
        /// Test the property 'HqSaleVelocity'
        /// </summary>
        [Test]
        public void HqSaleVelocityTest()
        {
            // TODO unit test for the property 'HqSaleVelocity'
        }
        /// <summary>
        /// Test the property 'AveragePrice'
        /// </summary>
        [Test]
        public void AveragePriceTest()
        {
            // TODO unit test for the property 'AveragePrice'
        }
        /// <summary>
        /// Test the property 'AveragePriceNQ'
        /// </summary>
        [Test]
        public void AveragePriceNQTest()
        {
            // TODO unit test for the property 'AveragePriceNQ'
        }
        /// <summary>
        /// Test the property 'AveragePriceHQ'
        /// </summary>
        [Test]
        public void AveragePriceHQTest()
        {
            // TODO unit test for the property 'AveragePriceHQ'
        }
        /// <summary>
        /// Test the property 'MinPrice'
        /// </summary>
        [Test]
        public void MinPriceTest()
        {
            // TODO unit test for the property 'MinPrice'
        }
        /// <summary>
        /// Test the property 'MinPriceNQ'
        /// </summary>
        [Test]
        public void MinPriceNQTest()
        {
            // TODO unit test for the property 'MinPriceNQ'
        }
        /// <summary>
        /// Test the property 'MinPriceHQ'
        /// </summary>
        [Test]
        public void MinPriceHQTest()
        {
            // TODO unit test for the property 'MinPriceHQ'
        }
        /// <summary>
        /// Test the property 'MaxPrice'
        /// </summary>
        [Test]
        public void MaxPriceTest()
        {
            // TODO unit test for the property 'MaxPrice'
        }
        /// <summary>
        /// Test the property 'MaxPriceNQ'
        /// </summary>
        [Test]
        public void MaxPriceNQTest()
        {
            // TODO unit test for the property 'MaxPriceNQ'
        }
        /// <summary>
        /// Test the property 'MaxPriceHQ'
        /// </summary>
        [Test]
        public void MaxPriceHQTest()
        {
            // TODO unit test for the property 'MaxPriceHQ'
        }
        /// <summary>
        /// Test the property 'StackSizeHistogram'
        /// </summary>
        [Test]
        public void StackSizeHistogramTest()
        {
            // TODO unit test for the property 'StackSizeHistogram'
        }
        /// <summary>
        /// Test the property 'StackSizeHistogramNQ'
        /// </summary>
        [Test]
        public void StackSizeHistogramNQTest()
        {
            // TODO unit test for the property 'StackSizeHistogramNQ'
        }
        /// <summary>
        /// Test the property 'StackSizeHistogramHQ'
        /// </summary>
        [Test]
        public void StackSizeHistogramHQTest()
        {
            // TODO unit test for the property 'StackSizeHistogramHQ'
        }
        /// <summary>
        /// Test the property 'WorldName'
        /// </summary>
        [Test]
        public void WorldNameTest()
        {
            // TODO unit test for the property 'WorldName'
        }
        /// <summary>
        /// Test the property 'WorldUploadTimes'
        /// </summary>
        [Test]
        public void WorldUploadTimesTest()
        {
            // TODO unit test for the property 'WorldUploadTimes'
        }

    }

}
