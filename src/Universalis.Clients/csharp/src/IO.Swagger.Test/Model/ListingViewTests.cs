/* 
 * Universalis
 *
 * Welcome to the Universalis documentation page.  <br />  <br />  There is a rate limit of 20 req/s (40 req/s burst) on the API, and 10 req/s (20 req/s burst) on the website itself, if you're scraping instead.  The number of simultaneous connections per IP is capped to 8.    To map item IDs to item names or vice versa, use <a href=\"https://xivapi.com/docs/Search#search\">XIVAPI</a>.  In addition to XIVAPI, you can also get item ID mappings from <a href=\"https://lumina.xiv.dev/docs/intro.html\">Lumina</a>,  <a href=\"https://raw.githubusercontent.com/xivapi/ffxiv-datamining/master/csv/Item.csv\">this sheet</a>, or  <a href=\"https://raw.githubusercontent.com/ffxiv-teamcraft/ffxiv-teamcraft/master/apps/client/src/assets/data/items.json\">this</a> pre-made dump.    To get a mapping of world IDs to world names, use <a href=\"https://xivapi.com/World\">XIVAPI</a> or  <a href=\"https://github.com/xivapi/ffxiv-datamining/blob/master/csv/World.csv\">this sheet</a>.  The <code>key</code> column represents the world ID, and the <code>Name</code> column represents the world name.  Note that not all listed worlds are available to be used &#8212; many of the worlds in this sheet are test worlds,  or Korean worlds (Korea is unsupported at this time).    <br />  <br />  If you use this API heavily for your projects, please consider supporting the website on  <a href=\"https://liberapay.com/karashiiro\">Liberapay</a>, <a href=\"https://ko-fi.com/karashiiro\">Ko-fi</a>, or  <a href=\"https://patreon.com/universalis\">Patreon</a>, or making a one-time donation on  <a href=\"https://ko-fi.com/karashiiro\">Ko-fi</a>. Any support is appreciated!  
 *
 * OpenAPI spec version: v2
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using IO.Swagger.Api;
using IO.Swagger.Model;
using IO.Swagger.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing ListingView
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class ListingViewTests
    {
        // TODO uncomment below to declare an instance variable for ListingView
        //private ListingView instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of ListingView
            //instance = new ListingView();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ListingView
        /// </summary>
        [Test]
        public void ListingViewInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" ListingView
            //Assert.IsInstanceOfType<ListingView> (instance, "variable 'instance' is a ListingView");
        }


        /// <summary>
        /// Test the property 'LastReviewTime'
        /// </summary>
        [Test]
        public void LastReviewTimeTest()
        {
            // TODO unit test for the property 'LastReviewTime'
        }
        /// <summary>
        /// Test the property 'PricePerUnit'
        /// </summary>
        [Test]
        public void PricePerUnitTest()
        {
            // TODO unit test for the property 'PricePerUnit'
        }
        /// <summary>
        /// Test the property 'Quantity'
        /// </summary>
        [Test]
        public void QuantityTest()
        {
            // TODO unit test for the property 'Quantity'
        }
        /// <summary>
        /// Test the property 'StainID'
        /// </summary>
        [Test]
        public void StainIDTest()
        {
            // TODO unit test for the property 'StainID'
        }
        /// <summary>
        /// Test the property 'WorldName'
        /// </summary>
        [Test]
        public void WorldNameTest()
        {
            // TODO unit test for the property 'WorldName'
        }
        /// <summary>
        /// Test the property 'WorldID'
        /// </summary>
        [Test]
        public void WorldIDTest()
        {
            // TODO unit test for the property 'WorldID'
        }
        /// <summary>
        /// Test the property 'CreatorName'
        /// </summary>
        [Test]
        public void CreatorNameTest()
        {
            // TODO unit test for the property 'CreatorName'
        }
        /// <summary>
        /// Test the property 'CreatorID'
        /// </summary>
        [Test]
        public void CreatorIDTest()
        {
            // TODO unit test for the property 'CreatorID'
        }
        /// <summary>
        /// Test the property 'Hq'
        /// </summary>
        [Test]
        public void HqTest()
        {
            // TODO unit test for the property 'Hq'
        }
        /// <summary>
        /// Test the property 'IsCrafted'
        /// </summary>
        [Test]
        public void IsCraftedTest()
        {
            // TODO unit test for the property 'IsCrafted'
        }
        /// <summary>
        /// Test the property 'ListingID'
        /// </summary>
        [Test]
        public void ListingIDTest()
        {
            // TODO unit test for the property 'ListingID'
        }
        /// <summary>
        /// Test the property 'Materia'
        /// </summary>
        [Test]
        public void MateriaTest()
        {
            // TODO unit test for the property 'Materia'
        }
        /// <summary>
        /// Test the property 'OnMannequin'
        /// </summary>
        [Test]
        public void OnMannequinTest()
        {
            // TODO unit test for the property 'OnMannequin'
        }
        /// <summary>
        /// Test the property 'RetainerCity'
        /// </summary>
        [Test]
        public void RetainerCityTest()
        {
            // TODO unit test for the property 'RetainerCity'
        }
        /// <summary>
        /// Test the property 'RetainerID'
        /// </summary>
        [Test]
        public void RetainerIDTest()
        {
            // TODO unit test for the property 'RetainerID'
        }
        /// <summary>
        /// Test the property 'RetainerName'
        /// </summary>
        [Test]
        public void RetainerNameTest()
        {
            // TODO unit test for the property 'RetainerName'
        }
        /// <summary>
        /// Test the property 'SellerID'
        /// </summary>
        [Test]
        public void SellerIDTest()
        {
            // TODO unit test for the property 'SellerID'
        }
        /// <summary>
        /// Test the property 'Total'
        /// </summary>
        [Test]
        public void TotalTest()
        {
            // TODO unit test for the property 'Total'
        }

    }

}
