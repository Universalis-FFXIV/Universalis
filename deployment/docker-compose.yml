version: "2.4"
services:
  universalis:
    image: ghcr.io/universalis-ffxiv/universalis:latest
    environment:
      ASPNETCORE_URLS: "http://+:4002"
    volumes:
      - "${HOME}/sqpack:/sqpack"
      - "${HOME}/DataProtection-Keys:/root/.aspnet/DataProtection-Keys"
    network_mode: "host" # TODO: Containerize or remove MongoDB so all of this can be changed
    depends_on:
      - postgres
      - redis
  universalis-staging:
    image: ghcr.io/universalis-ffxiv/universalis-staging:v2
    environment:
      ASPNETCORE_URLS: http://+:4001
    volumes:
      - "${HOME}/sqpack:/sqpack"
      - "${HOME}/DataProtection-Keys-Staging:/root/.aspnet/DataProtection-Keys"
    network_mode: "host"
  universalis-docs:
    image: ghcr.io/universalis-ffxiv/universalis-docs:latest
    ports:
      - "3998:3000"
  lodestone:
    image: ghcr.io/universalis-ffxiv/lodestone:latest
    ports:
      - "3999:3999"
  prometheus:
    image: prom/prometheus:v2.36.0
    network_mode: "host"
    volumes:
      - "${HOME}/prometheus/data:/prometheus"
      - "${HOME}/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml"
  grafana:
    image: grafana/grafana:8.5.5
    network_mode: "host"
    volumes:
      - "${HOME}/grafana/data:/var/lib/grafana"
    environment:
      GF_SERVER_DOMAIN: monitor.universalis.app
    user: '104'
  watchtower:
    image: containrrr/watchtower
    environment:
      WATCHTOWER_NOTIFICATIONS: shoutrrr
      WATCHTOWER_NOTIFICATION_URL: "discord://${ALERTS_CHANNEL_WEBHOOK}" # Format: token@channel
      WATCHTOWER_NOTIFICATION_TEMPLATE: "{{range .}}{{.Time.Format \"2006-01-02 15:04:05\"}} ({{.Level}}): {{.Message}}{{println}}{{end}}"
      WATCHTOWER_ROLLING_RESTART: "true"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "${HOME}/.docker/config.json:/config.json"
    command: --interval 30
  postgres:
    image: postgres:14.3
    command: postgres -c max_connections=300 -c shared_buffers=10GB -c work_mem=256MB -c maintenance_work_mem=1GB -c autovacuum_work_mem=8MB -c effective_io_concurrency=200 -c wal_compression=on -c wal_log_hints=on -c wal_buffers=64MB -c random_page_cost=1.1 -c cpu_tuple_cost=0.03
    ports:
      - "4051:5432"
    environment:
      POSTGRES_USER: universalis
      POSTGRES_PASSWORD: universalis
    shm_size: 10gb
    volumes:
      - "${HOME}/postgres:/var/lib/postgres/data"
  redis:
    image: redis:7.0.0
    command: redis-server --save 600 1 --loglevel warning
    ports:
      - "4050:6379"
    volumes:
      - "${HOME}/redis:/data"